{"ast":null,"code":"var _jsxFileName = \"/Users/Remus/Workspace/Zone/movie-listings/src/components/FilterBar.js\";\nimport React from 'react';\nimport RatingSlider from './RatingSlider'; // The filterbar takes in the values of the movies and genres\n// and combines the deep node values. It also manages the context\n// of the movie filters using the itemChecked value within the \n// checkbox.\n\nfunction FilterBar(_ref) {\n  var handleOnGenreChange = _ref.handleOnGenreChange,\n      genres = _ref.genres,\n      handleOnRatingChange = _ref.handleOnRatingChange,\n      rating = _ref.rating,\n      itemChecked = _ref.itemChecked,\n      initialRating = _ref.initialRating;\n  return React.createElement(\"div\", {\n    className: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row greybkd app-heading px-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, genres ? genres.map(function (genre, index) {\n    return React.createElement(\"div\", {\n      className: \"genres col-lg-2 col-md-4 col-sm-4 col-xl-2 col-6\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: genre.name,\n      value: genre.id,\n      id: genre.id,\n      checked: itemChecked,\n      onChange: function onChange(itemChecked) {\n        return handleOnGenreChange(genre.id, itemChecked.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), \"\\xA0 \", genre.name));\n  }) : 'Loading ...'), React.createElement(\"div\", {\n    className: \"row justify-content-md-center my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(RatingSlider, {\n    handleOnRatingChange: handleOnRatingChange,\n    rating: rating,\n    initialRating: initialRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n}\n\nexport default FilterBar;","map":{"version":3,"sources":["/Users/Remus/Workspace/Zone/movie-listings/src/components/FilterBar.js"],"names":["React","RatingSlider","FilterBar","handleOnGenreChange","genres","handleOnRatingChange","rating","itemChecked","initialRating","map","genre","index","name","id","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AACA;AACA;;AACA,SAASC,SAAT,OAA6G;AAAA,MAAxFC,mBAAwF,QAAxFA,mBAAwF;AAAA,MAAnEC,MAAmE,QAAnEA,MAAmE;AAAA,MAA3DC,oBAA2D,QAA3DA,oBAA2D;AAAA,MAArCC,MAAqC,QAArCA,MAAqC;AAAA,MAA7BC,WAA6B,QAA7BA,WAA6B;AAAA,MAAhBC,aAAgB,QAAhBA,aAAgB;AACzG,SACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,GAAGA,MAAM,CAACK,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,WACf;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAkE,MAAA,GAAG,EAAEA,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,IAAI,EAAED,KAAK,CAACE,IADhB;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACG,EAFjB;AAGI,MAAA,EAAE,EAAEH,KAAK,CAACG,EAHd;AAII,MAAA,OAAO,EAAEN,WAJb;AAKI,MAAA,QAAQ,EAAE,kBAACA,WAAD;AAAA,eAAiBJ,mBAAmB,CAACO,KAAK,CAACG,EAAP,EAAWN,WAAW,CAACO,KAAvB,CAApC;AAAA,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,WAQYJ,KAAK,CAACE,IARlB,CADJ,CADe;AAAA,GAAX,CAAH,GAaF,aAdP,CADF,EAkBE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,YAAD;AAAc,IAAA,oBAAoB,EAAEP,oBAApC;AAA0D,IAAA,MAAM,EAAEC,MAAlE;AAA0E,IAAA,aAAa,EAAEE,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CAlBF,CADF;AAwBF;;AACD,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport RatingSlider from './RatingSlider'\n\n// The filterbar takes in the values of the movies and genres\n// and combines the deep node values. It also manages the context\n// of the movie filters using the itemChecked value within the \n// checkbox.\nfunction FilterBar({ handleOnGenreChange, genres, handleOnRatingChange, rating, itemChecked, initialRating }){\n    return(\n      <div className=\"row justify-content-md-center\">\n        <div className=\"row greybkd app-heading px-5\">\n         { genres ? genres.map((genre, index) => \n                <div className='genres col-lg-2 col-md-4 col-sm-4 col-xl-2 col-6' key={index}>\n                    <label>\n                        <input type=\"checkbox\" \n                            name={genre.name} \n                            value={genre.id}\n                            id={genre.id}\n                            checked={itemChecked}\n                            onChange={(itemChecked) => handleOnGenreChange(genre.id, itemChecked.value)}\n                        /> \n                       &nbsp; { genre.name }\n                    </label>\n                </div>\n            ): 'Loading ...'\n         }\n        </div>\n        <div className=\"row justify-content-md-center my-3\">\n             <RatingSlider handleOnRatingChange={handleOnRatingChange} rating={rating} initialRating={initialRating} />\n        </div>\n      </div>\n    )\n }\n export default FilterBar;"]},"metadata":{},"sourceType":"module"}
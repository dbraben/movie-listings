{"version":3,"sources":["Genre.js","../node_modules/react-truncate/lib/Truncate.js","Movie.js"],"names":["Genre","movie","index","react_default","a","createElement","key","className","genre","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate_Truncate","_Component","Truncate","_ref","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","react","text","canvas","document","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","propTypes","prop_types_default","oneOfType","oneOf","number","bool","func","defaultProps","lib_Truncate","Movie","genres","visible","undefined","src","poster_path","alt","title","vote_average","overview","genre_ids","movie_genre","src_Genre","id","name"],"mappings":"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","file":"static/js/1.191c2b93.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Genre(movie, index) {\n  return (\n    <span  key={index} className=\"badge badge-pill badge-secondary mx-1 text-uppercase smallscreenfloatleft\">\n      { movie.genre } \n    </span>\n  )\n}\nexport default Genre;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n  _inherits(Truncate, _Component);\n\n  function Truncate() {\n    var _ref;\n\n    _classCallCheck(this, Truncate);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {};\n    _this.styles = {\n      ellipsis: {\n        position: 'fixed',\n        visibility: 'hidden',\n        top: 0,\n        left: 0\n      }\n    };\n    _this.elements = {};\n    _this.onResize = _this.onResize.bind(_this);\n    _this.onTruncate = _this.onTruncate.bind(_this);\n    _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n    _this.measureWidth = _this.measureWidth.bind(_this);\n    _this.getLines = _this.getLines.bind(_this);\n    _this.renderLine = _this.renderLine.bind(_this);\n    return _this;\n  }\n\n  _createClass(Truncate, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var text = this.elements.text,\n          calcTargetWidth = this.calcTargetWidth,\n          onResize = this.onResize;\n      var canvas = document.createElement('canvas');\n      this.canvasContext = canvas.getContext('2d');\n      calcTargetWidth(function () {\n        // Node not needed in document tree to read its content\n        if (text) {\n          text.parentNode.removeChild(text);\n        }\n      });\n      window.addEventListener('resize', onResize);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // Render was based on outdated refs and needs to be rerun\n      if (this.props.children !== prevProps.children) {\n        this.forceUpdate();\n      } // If the width prop has changed, recalculate size of contents\n\n\n      if (this.props.width !== prevProps.width) {\n        this.calcTargetWidth();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var ellipsis = this.elements.ellipsis,\n          onResize = this.onResize,\n          timeout = this.timeout;\n      ellipsis.parentNode.removeChild(ellipsis);\n      window.removeEventListener('resize', onResize);\n      window.cancelAnimationFrame(timeout);\n    } // Shim innerText to consistently break lines at <br/> but not at \\n\n\n  }, {\n    key: 'innerText',\n    value: function innerText(node) {\n      var div = document.createElement('div');\n      var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n      div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n      var text = div[contentKey];\n      var test = document.createElement('div');\n      test.innerHTML = 'foo<br/>bar';\n\n      if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n        div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n        text = div[contentKey];\n      }\n\n      return text;\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      this.calcTargetWidth();\n    }\n  }, {\n    key: 'onTruncate',\n    value: function onTruncate(didTruncate) {\n      var onTruncate = this.props.onTruncate;\n\n      if (typeof onTruncate === 'function') {\n        this.timeout = window.requestAnimationFrame(function () {\n          onTruncate(didTruncate);\n        });\n      }\n    }\n  }, {\n    key: 'calcTargetWidth',\n    value: function calcTargetWidth(callback) {\n      var target = this.elements.target,\n          calcTargetWidth = this.calcTargetWidth,\n          canvasContext = this.canvasContext,\n          width = this.props.width; // Calculation is no longer relevant, since node has been removed\n\n      if (!target) {\n        return;\n      }\n\n      var targetWidth = width || // Floor the result to deal with browser subpixel precision\n      Math.floor(target.parentNode.getBoundingClientRect().width); // Delay calculation until parent node is inserted to the document\n      // Mounting order in React is ChildComponent, ParentComponent\n\n      if (!targetWidth) {\n        return window.requestAnimationFrame(function () {\n          return calcTargetWidth(callback);\n        });\n      }\n\n      var style = window.getComputedStyle(target);\n      var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n      canvasContext.font = font;\n      this.setState({\n        targetWidth: targetWidth\n      }, callback);\n    }\n  }, {\n    key: 'measureWidth',\n    value: function measureWidth(text) {\n      return this.canvasContext.measureText(text).width;\n    }\n  }, {\n    key: 'ellipsisWidth',\n    value: function ellipsisWidth(node) {\n      return node.offsetWidth;\n    }\n  }, {\n    key: 'trimRight',\n    value: function trimRight(text) {\n      return text.replace(/\\s+$/, '');\n    }\n  }, {\n    key: 'getLines',\n    value: function getLines() {\n      var elements = this.elements,\n          _props = this.props,\n          numLines = _props.lines,\n          ellipsis = _props.ellipsis,\n          trimWhitespace = _props.trimWhitespace,\n          targetWidth = this.state.targetWidth,\n          innerText = this.innerText,\n          measureWidth = this.measureWidth,\n          onTruncate = this.onTruncate,\n          trimRight = this.trimRight;\n      var lines = [];\n      var text = innerText(elements.text);\n      var textLines = text.split('\\n').map(function (line) {\n        return line.split(' ');\n      });\n      var didTruncate = true;\n      var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n      for (var line = 1; line <= numLines; line++) {\n        var textWords = textLines[0]; // Handle newline\n\n        if (textWords.length === 0) {\n          lines.push();\n          textLines.shift();\n          line--;\n          continue;\n        }\n\n        var resultLine = textWords.join(' ');\n\n        if (measureWidth(resultLine) <= targetWidth) {\n          if (textLines.length === 1) {\n            // Line is end of text and fits without truncating\n            didTruncate = false;\n            lines.push(resultLine);\n            break;\n          }\n        }\n\n        if (line === numLines) {\n          // Binary search determining the longest possible line inluding truncate string\n          var textRest = textWords.join(' ');\n          var lower = 0;\n          var upper = textRest.length - 1;\n\n          while (lower <= upper) {\n            var middle = Math.floor((lower + upper) / 2);\n            var testLine = textRest.slice(0, middle + 1);\n\n            if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n              lower = middle + 1;\n            } else {\n              upper = middle - 1;\n            }\n          }\n\n          var lastLineText = textRest.slice(0, lower);\n\n          if (trimWhitespace) {\n            lastLineText = trimRight(lastLineText); // Remove blank lines from the end of text\n\n            while (!lastLineText.length && lines.length) {\n              var prevLine = lines.pop();\n              lastLineText = trimRight(prevLine);\n            }\n          }\n\n          resultLine = React.createElement('span', null, lastLineText, ellipsis);\n        } else {\n          // Binary search determining when the line breaks\n          var _lower = 0;\n\n          var _upper = textWords.length - 1;\n\n          while (_lower <= _upper) {\n            var _middle = Math.floor((_lower + _upper) / 2);\n\n            var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n            if (measureWidth(_testLine) <= targetWidth) {\n              _lower = _middle + 1;\n            } else {\n              _upper = _middle - 1;\n            }\n          } // The first word of this line is too long to fit it\n\n\n          if (_lower === 0) {\n            // Jump to processing of last line\n            line = numLines - 1;\n            continue;\n          }\n\n          resultLine = textWords.slice(0, _lower).join(' ');\n          textLines[0].splice(0, _lower);\n        }\n\n        lines.push(resultLine);\n      }\n\n      onTruncate(didTruncate);\n      return lines;\n    }\n  }, {\n    key: 'renderLine',\n    value: function renderLine(line, i, arr) {\n      if (i === arr.length - 1) {\n        return React.createElement('span', {\n          key: i\n        }, line);\n      } else {\n        var br = React.createElement('br', {\n          key: i + 'br'\n        });\n\n        if (line) {\n          return [React.createElement('span', {\n            key: i\n          }, line), br];\n        } else {\n          return br;\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var target = this.elements.target,\n          _props2 = this.props,\n          children = _props2.children,\n          ellipsis = _props2.ellipsis,\n          lines = _props2.lines,\n          spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n          targetWidth = this.state.targetWidth,\n          getLines = this.getLines,\n          renderLine = this.renderLine,\n          onTruncate = this.onTruncate;\n\n      var text = void 0;\n      var mounted = !!(target && targetWidth);\n\n      if (typeof window !== 'undefined' && mounted) {\n        if (lines > 0) {\n          text = getLines().map(renderLine);\n        } else {\n          text = children;\n          onTruncate(false);\n        }\n      }\n\n      delete spanProps.onTruncate;\n      delete spanProps.trimWhitespace;\n      return React.createElement('span', _extends({}, spanProps, {\n        ref: function ref(targetEl) {\n          _this2.elements.target = targetEl;\n        }\n      }), React.createElement('span', null, text), React.createElement('span', {\n        ref: function ref(textEl) {\n          _this2.elements.text = textEl;\n        }\n      }, children), React.createElement('span', {\n        ref: function ref(ellipsisEl) {\n          _this2.elements.ellipsis = ellipsisEl;\n        },\n        style: this.styles.ellipsis\n      }, ellipsis));\n    }\n  }]);\n\n  return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n  children: PropTypes.node,\n  ellipsis: PropTypes.node,\n  lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n  trimWhitespace: PropTypes.bool,\n  width: PropTypes.number,\n  onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n  children: '',\n  ellipsis: '…',\n  lines: 1,\n  trimWhitespace: false,\n  width: 0\n};\nexport default Truncate;\n;","import React from 'react';\nimport Genre from './Genre'\nimport Truncate from 'react-truncate';\nimport './App.css';\n\nfunction Movie({ movie, index, genres}){\n\n    return(\n      movie.visible || movie.visible === undefined ? \n      <div className=\"col-6 col-sm-4 col-md-4\">\n         <div className=\"card mt-3\">\n           <img className=\"card-img-top movie-thumbnail\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt=\"\" />\n           <div className=\"card-body\">\n             <h5 className=\"card-title\">{ movie.title }</h5>\n             <div className=\"star-rating\"><strong>Rating: <span className=\"rate-color\">{ movie.vote_average }</span>/10</strong></div>\n             <p className=\"card-text\">\n               <Truncate lines={4} ellipsis={<span>...</span>}>\n                  {movie.overview}\n               </Truncate>\n             </p>\n             <span className=\"meta\">\n               {\n                 movie.genre_ids.map(movie_genre => \n                    <Genre \n                      key={movie_genre} \n                      genre={genres.genres.map(genre => genre.id === movie_genre ? genre.name : '' )} \n                      index={index} \n                    />\n                 ) \n               }\n              </span>\n           </div>\n         </div>\n       </div> : ''\n    )\n }\n\n export default Movie;"],"sourceRoot":""}